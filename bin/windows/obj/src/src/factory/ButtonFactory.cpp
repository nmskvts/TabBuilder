// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_mvc_view_GridButton
#include <mvc/view/GridButton.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_src_factory_ButtonFactory
#include <src/factory/ButtonFactory.h>
#endif
#ifndef INCLUDED_src_gui_Button
#include <src/gui/Button.h>
#endif
#ifndef INCLUDED_src_gui_TabButton
#include <src/gui/TabButton.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_c9d2716bc2f09297_14_createTab,"src.factory.ButtonFactory","createTab",0x9c0c3c75,"src.factory.ButtonFactory.createTab","factory/ButtonFactory.hx",14,0x7321130b)
HX_LOCAL_STACK_FRAME(_hx_pos_c9d2716bc2f09297_18_createGrid,"src.factory.ButtonFactory","createGrid",0xe61dd0a6,"src.factory.ButtonFactory.createGrid","factory/ButtonFactory.hx",18,0x7321130b)
HX_LOCAL_STACK_FRAME(_hx_pos_c9d2716bc2f09297_22_create,"src.factory.ButtonFactory","create",0xe36eedc0,"src.factory.ButtonFactory.create","factory/ButtonFactory.hx",22,0x7321130b)
namespace src{
namespace factory{

void ButtonFactory_obj::__construct() { }

Dynamic ButtonFactory_obj::__CreateEmpty() { return new ButtonFactory_obj; }

void *ButtonFactory_obj::_hx_vtable = 0;

Dynamic ButtonFactory_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ButtonFactory_obj > _hx_result = new ButtonFactory_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ButtonFactory_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1f6c9632;
}

 ::src::gui::TabButton ButtonFactory_obj::createTab(::String text,Float width,Float height, ::Dynamic __o_x, ::Dynamic __o_y){
            		 ::Dynamic x = __o_x;
            		if (hx::IsNull(__o_x)) x = 0;
            		 ::Dynamic y = __o_y;
            		if (hx::IsNull(__o_y)) y = 0;
            	HX_GC_STACKFRAME(&_hx_pos_c9d2716bc2f09297_14_createTab)
HXDLIN(  14)		return  ::src::gui::TabButton_obj::__alloc( HX_CTX ,text,width,height,x,y,null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(ButtonFactory_obj,createTab,return )

 ::mvc::view::GridButton ButtonFactory_obj::createGrid(::String text,::String path,Float width,Float height, ::Dynamic __o_x, ::Dynamic __o_y){
            		 ::Dynamic x = __o_x;
            		if (hx::IsNull(__o_x)) x = 0;
            		 ::Dynamic y = __o_y;
            		if (hx::IsNull(__o_y)) y = 0;
            	HX_GC_STACKFRAME(&_hx_pos_c9d2716bc2f09297_18_createGrid)
HXDLIN(  18)		return  ::mvc::view::GridButton_obj::__alloc( HX_CTX ,x,y,text,path,width,height);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(ButtonFactory_obj,createGrid,return )

 ::src::gui::Button ButtonFactory_obj::create(::String text,Float width,Float height,int color, ::Dynamic __o_x, ::Dynamic __o_y){
            		 ::Dynamic x = __o_x;
            		if (hx::IsNull(__o_x)) x = 0;
            		 ::Dynamic y = __o_y;
            		if (hx::IsNull(__o_y)) y = 0;
            	HX_GC_STACKFRAME(&_hx_pos_c9d2716bc2f09297_22_create)
HXDLIN(  22)		return  ::src::gui::Button_obj::__alloc( HX_CTX ,text,width,height,color,x,y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(ButtonFactory_obj,create,return )


ButtonFactory_obj::ButtonFactory_obj()
{
}

bool ButtonFactory_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { outValue = create_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"createTab") ) { outValue = createTab_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"createGrid") ) { outValue = createGrid_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *ButtonFactory_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *ButtonFactory_obj_sStaticStorageInfo = 0;
#endif

hx::Class ButtonFactory_obj::__mClass;

static ::String ButtonFactory_obj_sStaticFields[] = {
	HX_("createTab",b9,30,e6,49),
	HX_("createGrid",e2,97,f9,56),
	HX_("create",fc,66,0f,7c),
	::String(null())
};

void ButtonFactory_obj::__register()
{
	ButtonFactory_obj _hx_dummy;
	ButtonFactory_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("src.factory.ButtonFactory",2a,a9,39,6a);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ButtonFactory_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ButtonFactory_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< ButtonFactory_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ButtonFactory_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ButtonFactory_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace factory
