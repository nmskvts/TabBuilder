// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif
#ifndef INCLUDED_src_gui_Button
#include <src/gui/Button.h>
#endif
#ifndef INCLUDED_src_gui_TabButton
#include <src/gui/TabButton.h>
#endif
#ifndef INCLUDED_src_gui_TabSet
#include <src/gui/TabSet.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ebfd7dbf20a08cdb_14_new,"src.gui.TabButton","new",0xb0aa953c,"src.gui.TabButton.new","gui/TabButton.hx",14,0xd8254e6b)
HX_LOCAL_STACK_FRAME(_hx_pos_ebfd7dbf20a08cdb_25_setTab,"src.gui.TabButton","setTab",0x38169477,"src.gui.TabButton.setTab","gui/TabButton.hx",25,0xd8254e6b)
HX_LOCAL_STACK_FRAME(_hx_pos_ebfd7dbf20a08cdb_22_setTab,"src.gui.TabButton","setTab",0x38169477,"src.gui.TabButton.setTab","gui/TabButton.hx",22,0xd8254e6b)
namespace src{
namespace gui{

void TabButton_obj::__construct(::String text,Float width,Float height, ::Dynamic __o_x, ::Dynamic __o_y, ::Dynamic __o_color){
            		 ::Dynamic x = __o_x;
            		if (hx::IsNull(__o_x)) x = 0;
            		 ::Dynamic y = __o_y;
            		if (hx::IsNull(__o_y)) y = 0;
            		 ::Dynamic color = __o_color;
            		if (hx::IsNull(__o_color)) color = -1;
            	HX_STACKFRAME(&_hx_pos_ebfd7dbf20a08cdb_14_new)
HXLINE(  15)		super::__construct(text,width,height,color,null(),null());
HXLINE(  16)		this->set_x(( (Float)(x) ));
HXLINE(  17)		this->set_y(( (Float)(y) ));
HXLINE(  18)		this->setColor(( (int)(color) ));
HXLINE(  19)		this->setSelectedColor(-16776961);
            	}

Dynamic TabButton_obj::__CreateEmpty() { return new TabButton_obj; }

void *TabButton_obj::_hx_vtable = 0;

Dynamic TabButton_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< TabButton_obj > _hx_result = new TabButton_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4],inArgs[5]);
	return _hx_result;
}

bool TabButton_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1b123bf8) {
		if (inClassId<=(int)0x17120186) {
			if (inClassId<=(int)0x0ddfced7) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0ddfced7;
			} else {
				return inClassId==(int)0x17120186;
			}
		} else {
			return inClassId==(int)0x19c29573 || inClassId==(int)0x1b123bf8;
		}
	} else {
		if (inClassId<=(int)0x7efbba29) {
			return inClassId==(int)0x3f2b00af || inClassId==(int)0x7efbba29;
		} else {
			return inClassId==(int)0x7f53d9e8;
		}
	}
}

void TabButton_obj::setTab( ::src::gui::TabSet tabSet){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::src::gui::TabButton,_gthis, ::src::gui::TabSet,tabSet) HXARGC(1)
            		void _hx_run( ::Dynamic e){
            			HX_STACKFRAME(&_hx_pos_ebfd7dbf20a08cdb_25_setTab)
HXLINE(  25)			tabSet->isClicked(_gthis);
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_ebfd7dbf20a08cdb_22_setTab)
HXDLIN(  22)		 ::src::gui::TabButton _gthis = hx::ObjectPtr<OBJ_>(this);
HXLINE(  23)		this->tabSet = tabSet;
HXLINE(  24)		this->addEventListener(HX_("click",48,7c,5e,48), ::Dynamic(new _hx_Closure_0(_gthis,tabSet)),null(),null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(TabButton_obj,setTab,(void))


hx::ObjectPtr< TabButton_obj > TabButton_obj::__new(::String text,Float width,Float height, ::Dynamic __o_x, ::Dynamic __o_y, ::Dynamic __o_color) {
	hx::ObjectPtr< TabButton_obj > __this = new TabButton_obj();
	__this->__construct(text,width,height,__o_x,__o_y,__o_color);
	return __this;
}

hx::ObjectPtr< TabButton_obj > TabButton_obj::__alloc(hx::Ctx *_hx_ctx,::String text,Float width,Float height, ::Dynamic __o_x, ::Dynamic __o_y, ::Dynamic __o_color) {
	TabButton_obj *__this = (TabButton_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TabButton_obj), true, "src.gui.TabButton"));
	*(void **)__this = TabButton_obj::_hx_vtable;
	__this->__construct(text,width,height,__o_x,__o_y,__o_color);
	return __this;
}

TabButton_obj::TabButton_obj()
{
}

void TabButton_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TabButton);
	HX_MARK_MEMBER_NAME(tabSet,"tabSet");
	 ::src::gui::Button_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void TabButton_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(tabSet,"tabSet");
	 ::src::gui::Button_obj::__Visit(HX_VISIT_ARG);
}

hx::Val TabButton_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"tabSet") ) { return hx::Val( tabSet ); }
		if (HX_FIELD_EQ(inName,"setTab") ) { return hx::Val( setTab_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val TabButton_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"tabSet") ) { tabSet=inValue.Cast<  ::src::gui::TabSet >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TabButton_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("tabSet",4d,5c,4a,7c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo TabButton_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::src::gui::TabSet */ ,(int)offsetof(TabButton_obj,tabSet),HX_("tabSet",4d,5c,4a,7c)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *TabButton_obj_sStaticStorageInfo = 0;
#endif

static ::String TabButton_obj_sMemberFields[] = {
	HX_("tabSet",4d,5c,4a,7c),
	HX_("setTab",d3,e7,6f,6f),
	::String(null()) };

hx::Class TabButton_obj::__mClass;

void TabButton_obj::__register()
{
	TabButton_obj _hx_dummy;
	TabButton_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("src.gui.TabButton",4a,87,f8,81);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(TabButton_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< TabButton_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TabButton_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TabButton_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace gui
