// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Shape
#include <openfl/display/Shape.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_src_factory_ButtonFactory
#include <src/factory/ButtonFactory.h>
#endif
#ifndef INCLUDED_src_gui_Button
#include <src/gui/Button.h>
#endif
#ifndef INCLUDED_src_gui_TabButton
#include <src/gui/TabButton.h>
#endif
#ifndef INCLUDED_src_gui_TabSet
#include <src/gui/TabSet.h>
#endif
#ifndef INCLUDED_src_shape_Rectangle
#include <src/shape/Rectangle.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_2968a792a9d179ff_11_new,"src.gui.TabSet","new",0x666f3d3c,"src.gui.TabSet.new","gui/TabSet.hx",11,0xb8484c9d)
HX_LOCAL_STACK_FRAME(_hx_pos_2968a792a9d179ff_27_createAll,"src.gui.TabSet","createAll",0x80be4961,"src.gui.TabSet.createAll","gui/TabSet.hx",27,0xb8484c9d)
HX_LOCAL_STACK_FRAME(_hx_pos_2968a792a9d179ff_37_addAll,"src.gui.TabSet","addAll",0xb0360e24,"src.gui.TabSet.addAll","gui/TabSet.hx",37,0xb8484c9d)
HX_LOCAL_STACK_FRAME(_hx_pos_2968a792a9d179ff_44_isClicked,"src.gui.TabSet","isClicked",0x35116db9,"src.gui.TabSet.isClicked","gui/TabSet.hx",44,0xb8484c9d)
HX_LOCAL_STACK_FRAME(_hx_pos_2968a792a9d179ff_52_getTabSet,"src.gui.TabSet","getTabSet",0x2f875f5f,"src.gui.TabSet.getTabSet","gui/TabSet.hx",52,0xb8484c9d)
namespace src{
namespace gui{

void TabSet_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_2968a792a9d179ff_11_new)
HXLINE(  14)		this->tabNum = 3;
HXLINE(  13)		this->tabSet = ::Array_obj< ::Dynamic>::__new();
HXLINE(  20)		super::__construct();
HXLINE(  21)		this->rect =  ::src::shape::Rectangle_obj::__alloc( HX_CTX ,( (Float)(0) ),( (Float)(0) ),( (Float)(1280) ),( (Float)(90) ),0);
HXLINE(  22)		this->createAll(this->tabNum);
HXLINE(  23)		this->addChild(this->rect);
HXLINE(  24)		this->addAll();
            	}

Dynamic TabSet_obj::__CreateEmpty() { return new TabSet_obj; }

void *TabSet_obj::_hx_vtable = 0;

Dynamic TabSet_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< TabSet_obj > _hx_result = new TabSet_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TabSet_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x19c29573) {
		if (inClassId<=(int)0x17120186) {
			if (inClassId<=(int)0x0ddfced7) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0ddfced7;
			} else {
				return inClassId==(int)0x17120186;
			}
		} else {
			return inClassId==(int)0x19c29573;
		}
	} else {
		if (inClassId<=(int)0x2165b484) {
			return inClassId==(int)0x1b123bf8 || inClassId==(int)0x2165b484;
		} else {
			return inClassId==(int)0x3f2b00af;
		}
	}
}

void TabSet_obj::createAll(int num){
            	HX_STACKFRAME(&_hx_pos_2968a792a9d179ff_27_createAll)
HXLINE(  28)		int x = 20;
HXLINE(  29)		int width = 250;
HXLINE(  30)		{
HXLINE(  30)			int _g = 1;
HXDLIN(  30)			int _g1 = (num + 1);
HXDLIN(  30)			while((_g < _g1)){
HXLINE(  30)				_g = (_g + 1);
HXDLIN(  30)				int i = (_g - 1);
HXLINE(  31)				::Array< ::Dynamic> _hx_tmp = this->tabSet;
HXDLIN(  31)				_hx_tmp->push(::src::factory::ButtonFactory_obj::createTab((HX_("Tab #",78,e5,10,9e) + i),( (Float)(width) ),( (Float)(60) ),x,20));
HXLINE(  32)				x = (x + (width + 5));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(TabSet_obj,createAll,(void))

void TabSet_obj::addAll(){
            	HX_STACKFRAME(&_hx_pos_2968a792a9d179ff_37_addAll)
HXDLIN(  37)		int _g = 0;
HXDLIN(  37)		::Array< ::Dynamic> _g1 = this->tabSet;
HXDLIN(  37)		while((_g < _g1->length)){
HXDLIN(  37)			 ::src::gui::TabButton tab = _g1->__get(_g).StaticCast<  ::src::gui::TabButton >();
HXDLIN(  37)			_g = (_g + 1);
HXLINE(  38)			tab->setTab(hx::ObjectPtr<OBJ_>(this));
HXLINE(  39)			this->addChild(tab);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(TabSet_obj,addAll,(void))

void TabSet_obj::isClicked( ::src::gui::TabButton tabButton){
            	HX_STACKFRAME(&_hx_pos_2968a792a9d179ff_44_isClicked)
HXDLIN(  44)		int _g = 0;
HXDLIN(  44)		::Array< ::Dynamic> _g1 = this->tabSet;
HXDLIN(  44)		while((_g < _g1->length)){
HXDLIN(  44)			 ::src::gui::TabButton tab = _g1->__get(_g).StaticCast<  ::src::gui::TabButton >();
HXDLIN(  44)			_g = (_g + 1);
HXLINE(  45)			if (hx::IsNotEq( tabButton,tab )) {
HXLINE(  46)				tab->setSelected(false);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(TabSet_obj,isClicked,(void))

::Array< ::Dynamic> TabSet_obj::getTabSet(){
            	HX_STACKFRAME(&_hx_pos_2968a792a9d179ff_52_getTabSet)
HXDLIN(  52)		return this->tabSet;
            	}


HX_DEFINE_DYNAMIC_FUNC0(TabSet_obj,getTabSet,return )


hx::ObjectPtr< TabSet_obj > TabSet_obj::__new() {
	hx::ObjectPtr< TabSet_obj > __this = new TabSet_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< TabSet_obj > TabSet_obj::__alloc(hx::Ctx *_hx_ctx) {
	TabSet_obj *__this = (TabSet_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TabSet_obj), true, "src.gui.TabSet"));
	*(void **)__this = TabSet_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

TabSet_obj::TabSet_obj()
{
}

void TabSet_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TabSet);
	HX_MARK_MEMBER_NAME(tabSet,"tabSet");
	HX_MARK_MEMBER_NAME(tabNum,"tabNum");
	HX_MARK_MEMBER_NAME(rect,"rect");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void TabSet_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(tabSet,"tabSet");
	HX_VISIT_MEMBER_NAME(tabNum,"tabNum");
	HX_VISIT_MEMBER_NAME(rect,"rect");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

hx::Val TabSet_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"rect") ) { return hx::Val( rect ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"tabSet") ) { return hx::Val( tabSet ); }
		if (HX_FIELD_EQ(inName,"tabNum") ) { return hx::Val( tabNum ); }
		if (HX_FIELD_EQ(inName,"addAll") ) { return hx::Val( addAll_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"createAll") ) { return hx::Val( createAll_dyn() ); }
		if (HX_FIELD_EQ(inName,"isClicked") ) { return hx::Val( isClicked_dyn() ); }
		if (HX_FIELD_EQ(inName,"getTabSet") ) { return hx::Val( getTabSet_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val TabSet_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"rect") ) { rect=inValue.Cast<  ::src::shape::Rectangle >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"tabSet") ) { tabSet=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"tabNum") ) { tabNum=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TabSet_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("tabSet",4d,5c,4a,7c));
	outFields->push(HX_("tabNum",f1,9e,46,7c));
	outFields->push(HX_("rect",24,4d,a7,4b));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo TabSet_obj_sMemberStorageInfo[] = {
	{hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(TabSet_obj,tabSet),HX_("tabSet",4d,5c,4a,7c)},
	{hx::fsInt,(int)offsetof(TabSet_obj,tabNum),HX_("tabNum",f1,9e,46,7c)},
	{hx::fsObject /*  ::src::shape::Rectangle */ ,(int)offsetof(TabSet_obj,rect),HX_("rect",24,4d,a7,4b)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *TabSet_obj_sStaticStorageInfo = 0;
#endif

static ::String TabSet_obj_sMemberFields[] = {
	HX_("tabSet",4d,5c,4a,7c),
	HX_("tabNum",f1,9e,46,7c),
	HX_("rect",24,4d,a7,4b),
	HX_("createAll",85,cf,d7,49),
	HX_("addAll",80,09,fb,9e),
	HX_("isClicked",dd,f3,2a,fe),
	HX_("getTabSet",83,e5,a0,f8),
	::String(null()) };

hx::Class TabSet_obj::__mClass;

void TabSet_obj::__register()
{
	TabSet_obj _hx_dummy;
	TabSet_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("src.gui.TabSet",4a,2f,49,7e);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(TabSet_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< TabSet_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TabSet_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TabSet_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace src
} // end namespace gui
