// Generated by Haxe 4.0.5
#ifndef INCLUDED_mvc_view_GridButton
#define INCLUDED_mvc_view_GridButton

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_src_gui_Button
#include <src/gui/Button.h>
#endif
HX_DECLARE_CLASS2(mvc,view,GridButton)
HX_DECLARE_CLASS2(openfl,display,Bitmap)
HX_DECLARE_CLASS2(openfl,display,BitmapData)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(src,gui,Button)

namespace mvc{
namespace view{


class HXCPP_CLASS_ATTRIBUTES GridButton_obj : public  ::src::gui::Button_obj
{
	public:
		typedef  ::src::gui::Button_obj super;
		typedef GridButton_obj OBJ_;
		GridButton_obj();

	public:
		enum { _hx_ClassId = 0x6705f037 };

		void __construct( ::Dynamic __o_x, ::Dynamic __o_y,::String text,::String path,Float width,Float height);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="mvc.view.GridButton")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"mvc.view.GridButton"); }
		static hx::ObjectPtr< GridButton_obj > __new( ::Dynamic __o_x, ::Dynamic __o_y,::String text,::String path,Float width,Float height);
		static hx::ObjectPtr< GridButton_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic __o_x, ::Dynamic __o_y,::String text,::String path,Float width,Float height);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~GridButton_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("GridButton",78,09,b0,06); }

		::String path;
		 ::openfl::display::Bitmap bitMap;
		 ::openfl::display::BitmapData bitMapData;
		void build();

		void repaint();

		::String getImagePath();
		::Dynamic getImagePath_dyn();

};

} // end namespace mvc
} // end namespace view

#endif /* INCLUDED_mvc_view_GridButton */ 
