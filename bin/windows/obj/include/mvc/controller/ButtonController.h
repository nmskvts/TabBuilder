// Generated by Haxe 4.0.5
#ifndef INCLUDED_mvc_controller_ButtonController
#define INCLUDED_mvc_controller_ButtonController

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(mvc,controller,ButtonController)
HX_DECLARE_CLASS2(mvc,view,Grid)
HX_DECLARE_CLASS2(mvc,view,GridButton)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(src,gui,Button)

namespace mvc{
namespace controller{


class HXCPP_CLASS_ATTRIBUTES ButtonController_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ButtonController_obj OBJ_;
		ButtonController_obj();

	public:
		enum { _hx_ClassId = 0x5386ecc4 };

		void __construct( ::mvc::view::Grid grid, ::openfl::display::Sprite mainSprite);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="mvc.controller.ButtonController")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"mvc.controller.ButtonController"); }
		static hx::ObjectPtr< ButtonController_obj > __new( ::mvc::view::Grid grid, ::openfl::display::Sprite mainSprite);
		static hx::ObjectPtr< ButtonController_obj > __alloc(hx::Ctx *_hx_ctx, ::mvc::view::Grid grid, ::openfl::display::Sprite mainSprite);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ButtonController_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ButtonController",4e,7d,2f,20); }

		 ::mvc::view::Grid grid;
		 ::Dynamic elementIterator;
		::Array< ::Dynamic> gridButtons;
		 ::openfl::display::Sprite mainSprite;
		void loadImages();
		::Dynamic loadImages_dyn();

		void createMessageBox(::String text);
		::Dynamic createMessageBox_dyn();

		void tabClick();
		::Dynamic tabClick_dyn();

};

} // end namespace mvc
} // end namespace controller

#endif /* INCLUDED_mvc_controller_ButtonController */ 
