// Generated by Haxe 4.0.5
#ifndef INCLUDED_src_gui_TabButton
#define INCLUDED_src_gui_TabButton

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_src_gui_Button
#include <src/gui/Button.h>
#endif
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(src,gui,Button)
HX_DECLARE_CLASS2(src,gui,TabButton)
HX_DECLARE_CLASS2(src,gui,TabSet)

namespace src{
namespace gui{


class HXCPP_CLASS_ATTRIBUTES TabButton_obj : public  ::src::gui::Button_obj
{
	public:
		typedef  ::src::gui::Button_obj super;
		typedef TabButton_obj OBJ_;
		TabButton_obj();

	public:
		enum { _hx_ClassId = 0x7f53d9e8 };

		void __construct(::String text,Float width,Float height, ::Dynamic __o_x, ::Dynamic __o_y, ::Dynamic __o_color);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="src.gui.TabButton")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"src.gui.TabButton"); }
		static hx::ObjectPtr< TabButton_obj > __new(::String text,Float width,Float height, ::Dynamic __o_x, ::Dynamic __o_y, ::Dynamic __o_color);
		static hx::ObjectPtr< TabButton_obj > __alloc(hx::Ctx *_hx_ctx,::String text,Float width,Float height, ::Dynamic __o_x, ::Dynamic __o_y, ::Dynamic __o_color);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TabButton_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TabButton",07,fe,ff,dc); }

		 ::src::gui::TabSet tabSet;
		void setTab( ::src::gui::TabSet tabSet);
		::Dynamic setTab_dyn();

};

} // end namespace src
} // end namespace gui

#endif /* INCLUDED_src_gui_TabButton */ 
